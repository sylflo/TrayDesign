/*html, body,img,div,p,span,strong,ul,li,dl,dt,dd,h1,h2,h3,h4,i,em,a,nav,section,banner,svg,path,text{ padding:0; margin:0;}
html,body{ height:100%; font-size:20px;}*/

ul, li, nav {
    padding: 0;
    margin: 0
}

html, body {
    font-size: 20px;
}

ul, li {
    list-style: none;
}

/*
img {
    max-width: 100%;
    height: auto;
    width: auto\9; // ie8
}*/

/*************************************
font
**************************************/
a {
    color: #000;
    text-decoration: none;
}

p, a, div, text {
    font-family: 'Source Sans Pro', Arial, sans-serif;
    color: black;
}

a:link, a:visited {
    color: black;
}

a:hover {
    background-color: #f7f7f7;
}

/*************************************
font
**************************************/
a {
    color: #000;
    text-decoration: none;
}

body {
    font-family: 'Source Sans Pro', Arial, sans-serif;
    color: black;
}

a:link, a:visited {
    color: black;
}

a:hover {
    background-color: #f7f7f7;
}

/* General */

/*
So we want the navbar to take the full height of the screen
but elements inherits the height of their parents.
And since the navbar is a child of html and body we need to put the height of 100% for this two elements
so the navbar can also have a height of 100%
*/

body {
    font-family: 'Source Sans Pro', sans-serif;
}

h1 {
    font-size: 5em;
}

h2 {
    font-size: 2em;
}

/* If you need to have a sentence/words in uppercase it's better to use this css property than put in hardcoded
in the html code cos that's really a bad practice */
.uppercase {
    text-transform: uppercase;
}

.title {
    font-weight: bold;
}

/* Remove the circle things for the list */
li {
    list-style: none;
}

/* I' using just one class so you can change the size for every box in once */
.rec {
    height: 3px;
    width: 40%;
    margin: 10px auto 20px auto;

}

.orange {
    background: #ff6666;
}

.green {
    background: #66FF99;
}

.green-font {
    color: #66FF99;
    font-size: 1.5em;
    font-weight: bold;
}

/* Layers (for now that's the most tricky part of the website) and check the tray part */
.container-box {
    position: relative;
    min-height: 75%;
    height: 75%;
    top: 12.5%;
}

.container-box .box {
    position: absolute;
    width: 200px;
    height: 100%;
    left: calc(33.33333333% + 100px);
    z-index: 10;
}

.container-box .box h2 {
    margin: 10px 0 0 10px;
}

.container-box .text {
    position: absolute;
    bottom: 0;
    z-index: 10;
    left: calc(calc(33.33333333% + 300px));
    width: 100%;
    margin: 0 0 0 10px;
    overflow-y: scroll;
    height: 100%;
    min-height: 100%;
}


/* Homepage */

#homepage {
    position: relative;
    height: 100%;
}

#homepage .col-lg-6:first-child {
    padding-left: 0;
}

#homepage:nth-child(1) {
    text-align: right;
}

#homepage h1 {
    position: absolute;
    bottom: 10px;
    left: 10px;
}

/* Desktop */
#desktop {
    height: 100vh;
}

#desktop .col-md-8 {
    background-color: #66FF99;
    height: 100vh;
}

#desktop h2 {
    font-size: 1em;
}

/* Tray */

/* So this is an example following the design for the tray (so you can see the problem
 On your design you have a box over a background color so to do this we need to position our elements in specific position

 First I separate the screens in two part on of the left (the white background) and on the right (the orange background)

 After I have a class .container-box which contains the box and the text I apply a position:relative on it
 In this class I separate it in two .box et .text on those two classes I apply a position: absolute

 So since the parent class is in position:relative and the child in position absolute it means the child depends
 of the position of the parents. The origin is the top let of the parent


So the bug we have and it's why I need to have a scrollbar when the height is too small.
So on this example you can see that if the content is bigger than the container (the screen) it will overlap over section.

Doing fullscreen mode is cool but because of responsive you will have some strong limitations

 If you want to do something cool maybe when you click on the box it'll open a modal. For now I'll do something quick
 following the design when possible cos I don't want to have something non responsive
 */

#tray {
    height: 100%;
    min-height: 100%;
}

#tray .col-md-4 {
    height: 100%;
    min-height: 100%;
}

#tray .col-md-8 {
    background-color: orange;
    height: 100%;
    min-height: 100%;
}

#tray .col-md-4 h2 {
    color: orange;
}


#tray .container-box {
    position: relative;
    min-height: 75%;
    height: 75%;
    top: 12.5%;
}

#tray .container-box .box {
    background-color: white;
    border: 5px solid black;
}


